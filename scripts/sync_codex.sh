#!/bin/bash

# Script d'int√©gration Codex > main, avec s√©curit√©, rebase et r√©solution propre

echo "‚û°Ô∏è Synchronisation Codex -> main (cursus optimal AniSph√®re)"

# Saisir le nom du d√©p√¥t/dossier courant (par d√©faut .)
read -p "Nom du dossier du d√©p√¥t (par d√©faut: .) : " DEPOT
DEPOT=${DEPOT:-.}

cd "$DEPOT" || { echo "‚ùå Dossier $DEPOT introuvable !"; exit 1; }

# Saisir la branche Codex √† int√©grer (autocompletion possible dans Bash classique)
echo
git branch -r | grep "codex/"
read -p "Nom exact de la branche Codex √† fusionner (ex: codex/implement-notification-feedback-service) : " CODEX_BRANCH

if [ -z "$CODEX_BRANCH" ]; then
    echo "‚ùå Aucune branche Codex pr√©cis√©e."
    exit 1
fi

# 1. Sauvegarde de ton travail en cours
echo "üîí [1/6] V√©rification et sauvegarde de ton travail..."
git status
git add .
git commit -m "WIP: sauvegarde avant synchro Codex" || echo "(Pas de modif √† committer)"

# 2. R√©cup√©ration des derni√®res mises √† jour distantes
echo "üîÑ [2/6] R√©cup√©ration des branches distantes..."
git fetch origin

# 3. Basculer sur la branche Codex, la mettre √† jour
echo "üîÅ [3/6] Checkout et pull Codex ($CODEX_BRANCH)..."
git checkout "$CODEX_BRANCH" || { echo "‚ùå Impossible de checkout la branche Codex."; exit 1; }
git pull origin "$CODEX_BRANCH"

# 4. Basculer sur main et rebase sur le dernier main
echo "üè∑Ô∏è [4/6] Passage sur main et mise √† jour (rebase)..."
git checkout main
git pull origin main --rebase

# 5. Merge Codex dans main
echo "üîÄ [5/6] Merge Codex dans main..."
git merge "$CODEX_BRANCH"

echo "‚ö†Ô∏è Si des conflits s'affichent, corrige-les dans VS Code puis tape :"
echo "    git add . && git commit -m 'R√©solution de conflits Codex dans main'"
read -p "Appuie sur [Entr√©e] pour continuer apr√®s r√©solution des conflits..."

# 6. Push sur GitHub
echo "‚¨ÜÔ∏è [6/6] Push main vers GitHub..."
git push origin main

# 7. (optionnel) Suppression locale de la branche Codex
read -p "Supprimer la branche Codex localement ? [y/N] : " DELETE
if [[ $DELETE == "y" || $DELETE == "Y" ]]; then
    git branch -d "$CODEX_BRANCH"
    echo "üóëÔ∏è Branche Codex supprim√©e localement."
fi

echo "‚úÖ Synchronisation termin√©e. D√©p√¥t √† jour !"
