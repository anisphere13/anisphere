#!/bin/bash

echo "‚û°Ô∏è Synchronisation Codex -> main (cursus optimal AniSph√®re)"

# Saisir le nom du dossier du d√©p√¥t
read -p "Nom du dossier du d√©p√¥t (par d√©faut: .) : " DEPOT
DEPOT=${DEPOT:-.}

cd "$DEPOT" || { echo "‚ùå Dossier $DEPOT introuvable !"; exit 1; }

# Afficher toutes les branches distantes Codex pour choix rapide
echo
echo "Branches Codex distantes disponibles :"
git fetch origin
git branch -r | grep "codex/" | sed 's/origin\///'

read -p "Nom exact de la branche Codex √† fusionner (ex: codex/corriger-erreurs-flutter-analyze) : " CODEX_BRANCH

if [ -z "$CODEX_BRANCH" ]; then
    echo "‚ùå Aucune branche Codex pr√©cis√©e."
    exit 1
fi

# V√©rifie si la branche existe en local, sinon la cr√©e depuis origin
if ! git show-ref --verify --quiet "refs/heads/$CODEX_BRANCH"; then
    echo "Branche locale absente, cr√©ation depuis origin/$CODEX_BRANCH..."
    git checkout -b "$CODEX_BRANCH" "origin/$CODEX_BRANCH" || { echo "‚ùå Impossible de cr√©er la branche locale."; exit 1; }
else
    git checkout "$CODEX_BRANCH" || { echo "‚ùå Impossible de checkout la branche Codex."; exit 1; }
    git pull origin "$CODEX_BRANCH"
fi

# 1. Sauvegarde du travail local
echo "üîí [1/6] Sauvegarde du travail local..."
git status
git add .
git commit -m "WIP: sauvegarde avant synchro Codex" || echo "(Pas de modif √† committer)"

# 2. R√©cup√©ration des mises √† jour distantes (main et codex)
echo "üîÑ [2/6] git fetch origin"
git fetch origin

# 3. Checkout main et pull + rebase
echo "üè∑Ô∏è [3/6] Passage sur main et mise √† jour (rebase)..."
git checkout main
git pull origin main --rebase

# 4. Merge Codex dans main
echo "üîÄ [4/6] Merge Codex dans main..."
git merge "$CODEX_BRANCH"

echo "‚ö†Ô∏è Si des conflits s'affichent, corrige-les dans VS Code puis tape :"
echo "    git add . && git commit -m 'R√©solution de conflits Codex dans main'"
read -p "Appuie sur [Entr√©e] pour continuer apr√®s r√©solution des conflits..."

# 5. Push sur GitHub
echo "‚¨ÜÔ∏è [5/6] Push main vers GitHub..."
git push origin main

# 6. Suppression locale (optionnel)
read -p "Supprimer la branche Codex localement ? [y/N] : " DELETE
if [[ $DELETE == "y" || $DELETE == "Y" ]]; then
    git branch -d "$CODEX_BRANCH"
    echo "üóëÔ∏è Branche Codex supprim√©e localement."
fi

echo "‚úÖ Synchronisation termin√©e. D√©p√¥t √† jour !"
