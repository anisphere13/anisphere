// Copilot Prompt : Service de QR code pour AniSph√®re.
// G√©n√®re des QR codes (texte, URL, ID), et int√®gre un scanner mobile.
// Utilise qr_flutter pour l'affichage, mobile_scanner pour la lecture.
// Pr√©vu pour la synchronisation d‚Äôanimaux, d'utilisateurs et de partages IA.

import 'package:flutter/material.dart';
import 'package:qr_flutter/qr_flutter.dart';
import 'package:mobile_scanner/mobile_scanner.dart';

class QRService {
  /// üîπ G√©n√®re un widget de QR code √† partir d'une donn√©e texte
  static Widget generateQRCode(String data, {double size = 200}) {
    return QrImageView(
      data: data,
      version: QrVersions.auto,
      size: size,
      gapless: false,
    );
  }

  /// üîç Affiche un scanner QR int√©gr√©
  /// Utilise `mobile_scanner`, n√©cessite un `controller` externe
  static Widget buildQRScanner({
    required void Function(String result) onScanned,
    MobileScannerController? controller,
  }) {
    final MobileScannerController effectiveController =
        controller ?? MobileScannerController();

    return MobileScanner(
      controller: effectiveController,
      onDetect: (capture) {
        final barcode = capture.barcodes.first;
        final value = barcode.rawValue;
        if (value != null) {
          onScanned(value);
          // Log debug uniquement
          assert(() {
            debugPrint("üì∑ QR scann√© : $value");
            return true;
          }());
        }
      },
    );
  }
}

