rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // ðŸ”¹ Collection support
    match /support/{feedbackId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // ðŸ”¹ Collection messages
    match /messages/{conversationId} {
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      allow read, update, delete: if request.auth != null && request.auth.uid in resource.data.participants;

      match /messages/{messageId} {
        allow create: if request.auth != null && request.auth.uid == request.resource.data.senderId;
        allow read: if request.auth != null &&
          request.auth.uid in get(/databases/$(database)/documents/messages/$(conversationId)).data.participants;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.senderId;
      }
    }

    // ðŸ”¹ Collection subscriptions
    match /subscriptions/{subscriptionId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // ðŸ”¹ ComplÃ©ments prÃ©vus
    match /notifications/{userId}/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /partages/{userId}/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /medias/{userId}/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /historique/{userId}/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
