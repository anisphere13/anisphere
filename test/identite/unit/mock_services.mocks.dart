// Mocks generated by Mockito 5.4.5 from annotations
// in anisphere/test/identite/unit/mock_services.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:anisphere/modules/identite/models/identity_model.dart' as _i5;
import 'package:anisphere/modules/identite/services/identity_service.dart'
    as _i4;
import 'package:anisphere/modules/identite/logic/ia_local_analyzer.dart' as _i7;
import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_1 extends _i1.SmartFake
    implements _i3.FirebaseFirestore {
  _FakeFirebaseFirestore_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IdentityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIdentityService extends _i1.Mock implements _i4.IdentityService {
  MockIdentityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<_i5.IdentityModel> get localBox => (super.noSuchMethod(
        Invocation.getter(#localBox),
        returnValue: _FakeBox_0<_i5.IdentityModel>(
          this,
          Invocation.getter(#localBox),
        ),
      ) as _i2.Box<_i5.IdentityModel>);

  @override
  _i3.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i3.FirebaseFirestore);

  @override
  _i6.Future<void> saveIdentityLocally(_i5.IdentityModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveIdentityLocally,
          [model],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i5.IdentityModel? getIdentityLocally(String? animalId) =>
      (super.noSuchMethod(Invocation.method(
        #getIdentityLocally,
        [animalId],
      )) as _i5.IdentityModel?);

  @override
  _i6.Future<void> updateIdentityField({
    required String? animalId,
    required String? field,
    required String? newValue,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateIdentityField,
          [],
          {
            #animalId: animalId,
            #field: field,
            #newValue: newValue,
            #userId: userId,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> syncToFirestore(_i5.IdentityModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncToFirestore,
          [model],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i5.IdentityModel?> fetchFromFirestore(String? animalId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFromFirestore,
          [animalId],
        ),
        returnValue: _i6.Future<_i5.IdentityModel?>.value(),
      ) as _i6.Future<_i5.IdentityModel?>);
}

/// A class which mocks [IdentityLocalAnalyzer].
///
/// See the documentation for Mockito's code generation for more information.
class MockIdentityLocalAnalyzer extends _i1.Mock
    implements _i7.IdentityLocalAnalyzer {
  MockIdentityLocalAnalyzer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<Map<String, dynamic>> analyze(
    _i7.IdentityAnalysisInput? input,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #analyze,
          [input],
        ),
        returnValue: _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}
